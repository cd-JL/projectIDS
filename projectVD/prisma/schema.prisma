generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type ProgramsPrograms {
  Name    String?
  Version String?
}

type VulnerabilitiesVulnerabilities {
  cve VulnerabilitiesVulnerabilitiesCve
}

type VulnerabilitiesVulnerabilitiesCve {
  cisaActionDue         String?
  cisaExploitAdd        String?
  cisaRequiredAction    String?
  cisaVulnerabilityName String?
  configurations        VulnerabilitiesVulnerabilitiesCveConfigurations[]
  cveTags               VulnerabilitiesVulnerabilitiesCveCveTags[]
  descriptions          VulnerabilitiesVulnerabilitiesCveDescriptions[]
  id                    String
  lastModified          String
  metrics               VulnerabilitiesVulnerabilitiesCveMetrics
  published             String
  references            VulnerabilitiesVulnerabilitiesCveReferences[]
  sourceIdentifier      String
  vendorComments        VulnerabilitiesVulnerabilitiesCveVendorComments[]
  vulnStatus            String
  weaknesses            VulnerabilitiesVulnerabilitiesCveWeaknesses[]
}

type VulnerabilitiesVulnerabilitiesCveConfigurations {
  nodes    VulnerabilitiesVulnerabilitiesCveConfigurationsNodes[]
  operator String?
}

type VulnerabilitiesVulnerabilitiesCveConfigurationsNodes {
  cpeMatch VulnerabilitiesVulnerabilitiesCveConfigurationsNodesCpeMatch[]
  negate   Boolean
  operator String
}

type VulnerabilitiesVulnerabilitiesCveConfigurationsNodesCpeMatch {
  criteria              String
  matchCriteriaId       String
  versionEndExcluding   String?
  versionEndIncluding   String?
  versionStartIncluding String?
  vulnerable            Boolean
}

type VulnerabilitiesVulnerabilitiesCveCveTags {
  sourceIdentifier String
  tags             String[]
}

type VulnerabilitiesVulnerabilitiesCveDescriptions {
  lang  String
  value String
}

type VulnerabilitiesVulnerabilitiesCveMetrics {
  cvssMetricV2  VulnerabilitiesVulnerabilitiesCveMetricsCvssMetricV2[]
  cvssMetricV30 VulnerabilitiesVulnerabilitiesCveMetricsCvssMetricV30[]
  cvssMetricV31 VulnerabilitiesVulnerabilitiesCveMetricsCvssMetricV31[]
}

type VulnerabilitiesVulnerabilitiesCveMetricsCvssMetricV2 {
  acInsufInfo             Boolean
  baseSeverity            String
  cvssData                VulnerabilitiesVulnerabilitiesCveMetricsCvssMetricV2CvssData
  exploitabilityScore     Float
  impactScore             Float
  obtainAllPrivilege      Boolean
  obtainOtherPrivilege    Boolean
  obtainUserPrivilege     Boolean
  source                  String
  type                    String
  userInteractionRequired Boolean
}

type VulnerabilitiesVulnerabilitiesCveMetricsCvssMetricV2CvssData {
  accessComplexity      String
  accessVector          String
  authentication        String
  availabilityImpact    String
  baseScore             Float
  confidentialityImpact String
  integrityImpact       String
  vectorString          String
  version               String
}

type VulnerabilitiesVulnerabilitiesCveMetricsCvssMetricV30 {
  cvssData            VulnerabilitiesVulnerabilitiesCveMetricsCvssMetricV30CvssData
  exploitabilityScore Float
  impactScore         Float
  source              String
  type                String
}

type VulnerabilitiesVulnerabilitiesCveMetricsCvssMetricV30CvssData {
  attackComplexity      String
  attackVector          String
  availabilityImpact    String
  baseScore             Float
  baseSeverity          String
  confidentialityImpact String
  integrityImpact       String
  privilegesRequired    String
  scope                 String
  userInteraction       String
  vectorString          String
  version               String
}

type VulnerabilitiesVulnerabilitiesCveMetricsCvssMetricV31 {
  cvssData            VulnerabilitiesVulnerabilitiesCveMetricsCvssMetricV31CvssData
  exploitabilityScore Float
  impactScore         Float
  source              String
  type                String
}

type VulnerabilitiesVulnerabilitiesCveMetricsCvssMetricV31CvssData {
  attackComplexity      String
  attackVector          String
  availabilityImpact    String
  baseScore             Float
  baseSeverity          String
  confidentialityImpact String
  integrityImpact       String
  privilegesRequired    String
  scope                 String
  userInteraction       String
  vectorString          String
  version               String
}

type VulnerabilitiesVulnerabilitiesCveReferences {
  source String
  tags   String[]
  url    String
}

type VulnerabilitiesVulnerabilitiesCveVendorComments {
  comment      String
  lastModified String
  organization String
}

type VulnerabilitiesVulnerabilitiesCveWeaknesses {
  description VulnerabilitiesVulnerabilitiesCveWeaknessesDescription[]
  source      String
  type        String
}

type VulnerabilitiesVulnerabilitiesCveWeaknessesDescription {
  lang  String
  value String
}

/// This collection uses a JSON Schema defined in the database, which requires additional setup for migrations. Visit https://pris.ly/d/mongodb-json-schema for more info.
model companies {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  sensors String[]
  /// Could not determine type: the field only had null or empty values in the sample set.
  users   Json?
}

/// This collection uses a JSON Schema defined in the database, which requires additional setup for migrations. Visit https://pris.ly/d/mongodb-json-schema for more info.
model programs {
  id       String             @id @default(auto()) @map("_id") @db.ObjectId
  programs ProgramsPrograms[]
  sensorId String
}

/// This collection uses a JSON Schema defined in the database, which requires additional setup for migrations. Visit https://pris.ly/d/mongodb-json-schema for more info.
model sensors {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  companyId String @db.ObjectId
  sensorId  String
}

model sign_in {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  email    String
  name     String
  password Bytes
}

/// This collection uses a JSON Schema defined in the database, which requires additional setup for migrations. Visit https://pris.ly/d/mongodb-json-schema for more info.
model users {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  companyId String @db.ObjectId
  email     String
  role      String
  username  String
}

/// This collection uses a JSON Schema defined in the database, which requires additional setup for migrations. Visit https://pris.ly/d/mongodb-json-schema for more info.
model vulnerabilities {
  id              String                           @id @default(auto()) @map("_id") @db.ObjectId
  sensorId        String
  sourceFile      String
  vulnerabilities VulnerabilitiesVulnerabilities[]
}
